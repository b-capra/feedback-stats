{"ast":null,"code":"var _jsxFileName = \"/home/brett/repos/fullstackopen/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Heading = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 29\n  }, this);\n};\n_c = Heading;\nconst Button = _ref2 => {\n  let {\n    text,\n    onClick\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 37\n  }, this);\n};\n_c2 = Button;\nconst Total = _ref3 => {\n  let {\n    text,\n    total\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [text, \": \", Math.round(total * 100) / 100]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 34\n  }, this);\n};\n_c3 = Total;\nconst Avg = _ref4 => {\n  let {\n    totals\n  } = _ref4;\n  const avg = (totals[0] - totals[2]) / (totals[0] + totals[1] + totals[2]);\n  const rounded = Math.round(avg * 100) / 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Average: \", rounded]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Avg;\nconst Statistics = _ref5 => {\n  let {\n    totals\n  } = _ref5;\n  if (totals[0] + totals[1] + totals[2] === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      text: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given yet. Try adding some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      text: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      text: \"Good\",\n      total: totals[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      text: \"Neutral\",\n      total: totals[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      text: \"Bad\",\n      total: totals[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      text: \"All\",\n      total: totals[0] + totals[1] + totals[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      text: \"Average\",\n      total: (totals[0] - totals[2]) / (totals[0] + totals[1] + totals[2])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Avg, {\n      totals: totals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      text: \"Positive\",\n      total: totals[0] / (totals[0] + totals[1] + totals[2])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Statistics;\nconst App = () => {\n  _s();\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const addGood = () => setGood(good + 1);\n  const addNeutral = () => setNeutral(neutral + 1);\n  const addBad = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      text: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Good\",\n      onClick: addGood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Neutral\",\n      onClick: addNeutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Bad\",\n      onClick: addBad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      totals: [good, neutral, bad]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Heading\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Total\");\n$RefreshReg$(_c4, \"Avg\");\n$RefreshReg$(_c5, \"Statistics\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["useState","Heading","text","Button","onClick","Total","total","Math","round","Avg","totals","avg","rounded","Statistics","App","good","setGood","neutral","setNeutral","bad","setBad","addGood","addNeutral","addBad"],"sources":["/home/brett/repos/fullstackopen/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Heading = ({text}) => <h1>{text}</h1>\n\nconst Button = ({text, onClick}) => <button onClick={onClick}>{text}</button>\n\nconst Total = ({text, total}) => <div>{text}: {Math.round(total * 100) / 100}</div>\n\nconst Avg = ({totals}) => {\n  const avg = (totals[0] - totals[2]) / (totals[0] + totals[1] + totals[2])\n  const rounded = Math.round(avg * 100) / 100\n\n  return (\n    <div>\n      Average: {rounded}\n    </div>\n  )\n}\n\nconst Statistics = ({totals}) => {\n  if (totals[0] + totals[1] + totals[2] === 0) return (\n    <div>\n      <Heading text='Statistics' />\n      <p>No feedback given yet. Try adding some!</p>\n    </div>\n  )\n\n  return (\n    <div>\n      <Heading text='Statistics' />\n      <Total text='Good' total={totals[0]} />\n      <Total text='Neutral' total={totals[1]} />\n      <Total text='Bad' total={totals[2]} />\n      <br></br>\n      <Total text='All' total={totals[0] + totals[1] + totals[2]} />\n      <Total text='Average' total={(totals[0] - totals[2]) / (totals[0] + totals[1] + totals[2])} />\n      <Avg totals={totals} />\n      <Total text='Positive' total={totals[0] / (totals[0] + totals[1] + totals[2])} />\n    </div>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const addGood = () => setGood(good + 1)\n  const addNeutral = () => setNeutral(neutral + 1)\n  const addBad = () => setBad(bad + 1)\n\n  return (\n    <div>\n      <Heading text='Give Feedback' />\n      <Button text='Good' onClick={addGood} />\n      <Button text='Neutral' onClick={addNeutral} />\n      <Button text='Bad' onClick={addBad} />\n\n      <Statistics totals={[good, neutral, bad]}/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}